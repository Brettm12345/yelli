apiVersion: v1
kind: ConfigMap
metadata:
  name: yelli-configmap
  namespace: default
  labels:
    stage: production
    name: yelli
    app: yelli
data:
  nginx.conf: |
    worker_processes auto;
    worker_rlimit_nofile 100000;

    events {
      worker_connections 4000;
      use epoll;
      multi_accept on;
    }

    http {
      charset utf-8;
      access_log off;
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      server_tokens off;
      
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      open_file_cache max=200000 inactive=20s;
      open_file_cache_valid 30s;
      open_file_cache_min_uses 2;
      open_file_cache_errors on;

      gzip on;
      gzip_comp_level   9;
      gzip_min_length 10240;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/json application/xml;
      gzip_vary         on;
      gzip_disable msie6;
      
      reset_timedout_connection on;
      client_body_timeout 60;
      send_timeout 60;
      keepalive_timeout 60;
      keepalive_requests 100000;

      ssl_session_timeout 1d;
      ssl_session_cache shared:SSL:50m;
      ssl_session_tickets off;

      ssl_protocols TLSv1.2;
      ssl_certificate /certs/yelli.crt;
      ssl_certificate_key /certs/yelli.key;
      ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
      ssl_prefer_server_ciphers on;
      ssl_stapling on;
      ssl_stapling_verify on;
      resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
      resolver_timeout 2s;
      types_hash_max_size 2048;

      server {
        server_name yelli.com;
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl http2;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
      }
    }
  mime.types: |
    types {
      application/atom+xml                  atom;
      application/json                      json map topojson;
      application/ld+json                   jsonld;
      application/rss+xml                   rss;
      application/geo+json                  geojson;
      application/xml                       xml;
      application/rdf+xml                   rdf;
      text/javascript                       js mjs;
      application/manifest+json             webmanifest;
      application/x-web-app-manifest+json   webapp;
      text/cache-manifest                   appcache;
      image/gif                             gif;
      image/jpeg                            jpeg jpg;
      image/png                             png;
      image/svg+xml                         svg svgz;
      image/vnd.wap.wbmp                    wbmp;
      image/webp                            webp;
      image/x-icon                          cur ico;
      font/woff                             woff;
      font/woff2                            woff2;
      application/vnd.ms-fontobject         eot;
      font/ttf                              ttf;
      font/collection                       ttc;
      font/otf                              otf;
      text/css                              css;
      text/html                             htm html shtml;
      text/plain                            txt;
  }


